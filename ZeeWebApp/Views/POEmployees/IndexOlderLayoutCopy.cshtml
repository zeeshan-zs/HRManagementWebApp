@using PagedList;
@using PagedList.Mvc;


@model IPagedList<ZeeWebApp.Models.POEmployee>

@{
    ViewBag.Title = "List of All Employees";
}

<h2>List of All Employees</h2>

@*@if (User.IsInRole("Admin"))
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}*@

@*<div class="alert alert-success alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <strong>Success!</strong> has been added to the system.
    </div>*@

<p>
    @using (Html.BeginForm("Index", "POEmployees", FormMethod.Get))
    {
        @*<b>Search By:</b>*@
        <div class="input-group">
            <div class="input-group-text">
                <div class="mx-1"><strong>Search By:</strong></div>
                @Html.RadioButton("searchBy", "Name", true, htmlAttributes: new { @class = "form-check-input mt-0 mx-1" }) <text>Name</text>
                @Html.RadioButton("searchBy", "PassportNo", htmlAttributes: new { @class = "form-check-input mt-0 mx-1" }) <text>Passport Number</text><br />
            </div>
            @Html.TextBox("searchText", null, htmlAttributes: new { @class = "form-control" })

            <input type="submit" value="Search" class="btn btn-outline-success" />
        </div>
            
            
            }


    </p>
<table id="testyo" class="table table-striped table-bordered">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().EntityID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().StatusID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().EmployeeID)
        </th>
        <th>
            @Html.ActionLink("FirstName", "Index", new { sortBy = ViewBag.SortNameParameter, searchBy = Request.QueryString["searchBy"], searchText = Request.QueryString["searchText"] })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().MiddleName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Country.Nationality)
        </th>
        <th>
            @Html.ActionLink("PassportNo", "Index", new { sortBy = ViewBag.SortPassportNoParameter, searchBy = Request.QueryString["searchBy"], searchText = Request.QueryString["searchText"] })
        </th>
        <th>Actions</th>
    </tr>

    @*Id, TextInfo, NationalityId, CountryId, EmpNo, EmpName, RollNo, PassportNo, Residence,
        IssueDate, ExpiryDate, VisaCancelledDate, DateofBirth, JobNo, EmiratesId, JobName, SRNo,
        RefundAmtRcvd, VisaDepdRfnd*@

    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="10"> There are no results!</td>
        </tr>
    }
    else
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Entity.EntityName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Statustbl.StatusVal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmployeeID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MiddleName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country.Nationality)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PassportNo)
                </td>
                <td>
                    @*<a href="POEmployees/Details/@item.Id"> <span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span></a>*@
                    <a href="@Url.Action("Details", "POEmployees", new { id = item.Id })"><span class="me-2"><i class="bi bi-eye"></i></span></a>
                    @*@Html.ActionLink("Details", "Details", new { id = item.Id })*@
                    @if (User.IsInRole("Admin"))
                    {
                        @*@Html.ActionLink("Edit", "Edit", new { id = item.Id }) <text>|</text>*@
                        @*@Html.ActionLink("Delete", "Delete", new { id = item.Id }) <text>|</text>*@

                        <a href="@Url.Action("Edit", "POEmployees", new { id = item.Id })"><span class="me-2"><i class="bi bi-pencil-square"></i></span></a>
                        <a href="@Url.Action("Delete", "POEmployees", new { id = item.Id })"><span class="me-2"><i class="bi bi-trash3"></i></span></a>

                        @*<a href="POEmployees/Edit/@item.Id"> <span class="glyphicon glyphicon-edit" aria-hidden="true"></span></a>
                            <a href="POEmployees/Delete/@item.Id"> <span class="glyphicon glyphicon-trash" aria-hidden="true"></span></a>*@
                    }
                </td>
            </tr>
        }
    }

</table>

@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    searchBy = Request.QueryString["searchBy"],
    searchText = Request.QueryString["searchText"],
    sortBy = Request["sortBy"]
}),
    new PagedListRenderOptions()
    {
        Display = PagedListDisplayMode.IfNeeded,
        DisplayItemSliceAndTotal = true,
        LiElementClasses = new string[] { "page-item" }
    })



<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ ALTERNATIVE +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->


<table id="POEmployeesIndex" class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().EntityID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().StatusID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().EmployeeID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().MiddleName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Country.Nationality)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().PassportNo)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="10"> There are no results!</td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Entity.EntityName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Statustbl.StatusVal)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MiddleName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Gender)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Country.Nationality)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PassportNo)
                    </td>
                    <td>                        
                        <a href="@Url.Action("Details", "POEmployees", new { id = item.Id })"><span class="me-2"><i class="bi bi-eye"></i></span></a>
                        
                        @if (User.IsInRole("Admin"))
                        {
                            <a href="@Url.Action("Edit", "POEmployees", new { id = item.Id })"><span class="me-2"><i class="bi bi-pencil-square"></i></span></a>
                            <a href="@Url.Action("Delete", "POEmployees", new { id = item.Id })"><span class="me-2"><i class="bi bi-trash3"></i></span></a>

                        }
                    </td>
                </tr>
            }
        }
           </tbody>
    <tfoot>
        <tr>
            <th>TEST</th>
            <th>TEST</th>
            <th>TEST</th>
            <th>TEST</th>
            <th>TEST</th>
            <th>TEST</th>
            <th>TEST</th>
            <th>TEST</th>
            <th>TEST</th>
            <th>TEST</th>
        </tr>
    </tfoot>
</table>




<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ALTERNATIVE++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->


<p>
    @*@Html.ActionLink("Download Excel", "DownloadExcel")*@
    @if (User.IsInRole("Admin"))
    {
        <a href="@Url.Action("Create", "POEmployees")" class="btn btn-light"><span class="me-2"><i class="bi bi-person-plus-fill"></i></span><span>Create New</span></a>
    }
        <a href="@Url.Action("DownloadExcel", "POEmployees")" class="btn btn-primary"><span class="me-2"><i class="bi bi-download"></i></span><span>Export to Excel</span></a>

    </p>

@section scripts {
    <script>
        $(document).ready(function () {

            // show when page load
            debugger
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-bottom-full-width",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "3000",
                "hideDuration": "1000",
                "timeOut": "3000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }

            if (Boolean("@ViewBag.EmpCreateSuccess")) {
                toastr.success("The Employee was added successfully!");
            }
            else if (Boolean("@ViewBag.EmpUpdateSuccess")) {
                toastr.success("The Employee was updated successfully!");
            }

            //ADD ADDITIONAL BOOTRAP CLASS TO PAGINATION HTML CODE SINCE PagedList DOESNT PROVED CSS SUPPORT FOR BOOTSTRAP 4 and HIGHER
            var element = document.getElementsByClassName("page-item");
            for (var i = 0; i < element.length; i++) {
                var aElementinLi = element[i].getElementsByTagName("a");
                aElementinLi[0].classList.add("page-link");
            }
            
            

        });
    </script>
}