@using PagedList;
@using PagedList.Mvc;

@model IPagedList<ZeeWebApp.Models.Employee>

@{
    ViewBag.Title = "List of Employees";
}

<h2>List of Employees</h2>

@if (User.IsInRole("Admin"))
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}

    <p>
        @using (Html.BeginForm("Index", "Employees", FormMethod.Get))
        {
            <b>Search By:</b>
            @Html.RadioButton("searchBy", "Name", true) <text>Name</text>
            @Html.RadioButton("searchBy", "Gender") <text>Gender</text><br />

            @Html.TextBox("searchText") <input type="submit" value="Search!" />
        }


    </p>
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Name", "Index", new { sortBy = ViewBag.SortNameParameter, searchBy = Request.QueryString["searchBy"], searchText = Request.QueryString["searchText"] })
            </th>
            <th>
                @Html.ActionLink("Gender", "Index", new { sortBy = ViewBag.SortGenderParameter, searchBy = Request.QueryString["searchBy"], searchText = Request.QueryString["searchText"] })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Department.Name)
            </th>
            <th></th>
        </tr>

        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="4"> There aren't any results bro!</td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Gender)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.City)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Department.Name)
                    </td>
                    <td>
                        @if (User.IsInRole("Admin"))
                        {
                            @Html.ActionLink("Edit", "Edit", new { id = item.EmployeeID }) <text>|</text>
                            @Html.ActionLink("Delete", "Delete", new { id = item.EmployeeID }) <text>|</text>
                        }

                        @Html.ActionLink("Details", "Details", new { id = item.EmployeeID })
                    </td>
                </tr>
            }
        }

    </table>

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchBy = Request.QueryString["searchBy"], searchText = Request.QueryString["searchText"], sortBy = Request["sortBy"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayItemSliceAndTotal = true })